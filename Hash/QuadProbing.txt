
struct item{
	int key;
	int value;
}


//flag =0 when its empty
//flag=1 when its non empty
//flag=2 when val is deleted

struct hashtable
{
	int flag;
	struct item * data;
}

void init()
{
	for(int i=0li<maxsize;i++)
	{
		array[i].data=NULL;
		array[i].flag=0;
	}
}

int hashfunction(int key)
{
	return key%maxsize;
}

void insert(int key,int value)
{
	struct hashtable *newitem=(struct hashtable *)malloc(sizeof(hashtable));
	newitem->flag=0;
	newitem->data=NULL;
	int hashkey=hashfunction(key);

	if(array[hashkey].flag == 0 || array[hashkey].flag == 2)
	{
		array[hashkey].flag=1;
		array[hashkey].data=newitem;
		size++;
	}

	else if(array[hashkey].data->key == key)
	{
	 printf("Duplicate");
	 return;
	}

	else
	{
		int count=0;
		int j=(hashkey+1)%size;
		for(int k=2,q=k*k;q<maxsize;k++)
		{
			if(array[j].flag==0 || array[j].flag == 2)
			{
			count=1;
			break;
			}
			j=(j+q)%maxsize;
		}

		if(q==hashkey || count==0)
		{
		//FULL;
		}
		else
		{
			array[hashkey].flag=1;
			array[hashkey].data=newitem;
			size++;
		}
	}
}

