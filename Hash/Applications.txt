Applications of Trie :
URL decoding
Network Browse History 

Ex. we would have searched on www.hashing.com
www.prefix.com
www.suufixtree.com

so next time when we type www we will get suggestion of the above things.

Trie is also used in Network Routing
The IP Addresses are tracked in Trie

Suffix Tree:
Compressed trie,to reduce the number of edges
Pattern matching,Longest palindrome
Ex banana
a
na
ana
nana
anana
banana

and then form the trie

Hashing : Large amount of data is mapped in a table using hashfunction is called hashing

Types of Hashing:
1)Static - storing elements in a hashtable whose size is fixed
2)Dynamic - storing elements in a hashtable whose size is not fixed can be varied

Hashfunctions :
1)Modulo Arithmetic 
	----> division by size of hashtable
	----->division by nearest prime number
2)Mid Sqaure Method - find square of the key and find its center
3)Folding : Adding numbers and reducing it
4)Converting text to number : "Hello" add all ascii values and that is the hashkey
5)Truncating

Collision:
When two elements have the same hahskey
Collision cant be removed,but can be reduced

Types of collision resolution techniques:
1)Open Addressing - separate chaining (The collided elements are present outside the table)
2)Closed Addressing - linear,quad,double,rehash

Double 
hashkey2= Prime- (key%prime);
index=hashkey+i*hashkey2

Rehashing :
Load factor = elements occupied/total size
Load factor > 0.75 
Increase the size of the hashtable
Rehash it

Applications of Hashing :
1)Crytography
2)URL Encoding

Ordinary plain text -> Unintentional Text
Concern here is :
1)Confidentiality
2)Authentication
3)Integrity

Cryptography:
1)Ecommerce Transactions
2)Bank transactions 

Types pf cryptography:
1)Symmetric key
2)Hash function
3)Public key

Symmetric Key:
1)Receiver and sender have same key
Sender encrypts the key
and receiver decrypts the key

Public Key:
Public keys are freely distributed
Private keys are given with some authentication 

Sender ----> Receiver 

Sender - public key
Receiver - private key

To encrypt we use public key and the receiver will have a private key to decrypt.

Hash function:
Message -> Hashfunction -> Hashvalue
Hashed data is small compared to the actual vlaue - digest /  compression function

Properties of hash function for cryptography :
1)Pre-image resistance
The reversal of hashfunction must be difficult.
Basically we must have a hash function which is hard to understand

2)Second pre-image
y=h(x);
Value of two data must not be the same

Design of hashing algorithm :
Two fixed size of block of data.
Data block -> Hahsfunction -> Hashvalue

Different Hashing Algo:
1)Whirlpool
2)Secure Hash function
3)Message digest

Password file :
Userid hashvalue(password)


URL ENCODING :
Address of the web
Form of the url 

{//[user:password@]host[:port]path[?Query][+frynet]}

user,password - security reason
Example 
http://www.google.com/search?q=welcome+pes

Rules:
*****ALLOWED****
ASCII 0-9,(A-Z),(a-z)
<,>,\,{}

Reserved words :
?,/,#,:

all the non-ascii must be encoded
If there are escape characters we use %xy as encoding
for space %20
for 0 %00
(ascii of space is 32)


Suffix tree
Starting from the first character of the pattern and root
of Suffix Tree, do following for every character.
i) For the current character of pattern, if there is an
edge from the current node of suffix tree, follow the
edge.
ii) If there is no edge, print “pattern doesn’t exist in
text” and return.

2) If all characters of pattern have been processed, i.e.,
there is a path from root for characters of the given
pattern, then print “Pattern found”.

Applications:
• English dictionary
• Predictive text
• Auto-complete dictionary found on Mobile phones and other gadgets.
Advantages:
• Faster than BST
• Printing of all the strings in the alphabetical order easily.
• Prefix search can be done (Auto complete).
Disadvantages:
• Need for a lot of memory to store the strings,
• Storing of too many node pointers.




